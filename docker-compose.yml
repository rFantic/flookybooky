services:

  adminer:
    profiles: ["all"]
    image: adminer
    restart: always
    ports:
      - 9999:8080

  customerdb:
    profiles: ["customer", "all"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: customer
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwd

  
  customer:
    profiles: ["customer", "all"]
    build:
      context: .
      dockerfile: ./customer/customer.dockerfile
    restart: on-failure


  userdb:
    profiles: ["user", "all"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwd
    
  user:
    profiles: ["user", "all"]
    build:
      context: .
      dockerfile: ./user/user.dockerfile
    restart: on-failure 
  
  flightdb:
    profiles: ["flight", "all"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: flight
      POSTGRES_FLIGHT: root
      POSTGRES_PASSWORD: passw  
  
  flight:
    profiles: ["flight", "all"]
    build:
      context: .
      dockerfile: ./flight/flight.dockerfile
    restart: on-failured

  graphql:
    profiles: ["all"]
    build:
      context: .
      dockerfile: ./graphql/graphql.dockerfile
    restart: on-failure
    ports:
      - 8081:8081