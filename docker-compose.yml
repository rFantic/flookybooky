services:

  adminer:
    image: adminer
    restart: always
    ports:
      - 9999:8080

  userdb:
    profiles: ["user", "graphql"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwd
  
  user:
    profiles: ["user", "graphql"]
    build:
      context: .
      dockerfile: ./services/user/user.dockerfile
    restart: on-failure
 
  flightdb:
    profiles: ["flight", "graphql"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: flight
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwd
    
  flight:
    profiles: ["flight", "graphql"]
    build:
      context: .
      dockerfile: ./services/flight/flight.dockerfile
    restart: on-failure

  customerdb:
    profiles: ["customer", "graphql"]
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: customer
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwd
    
  customer:
    profiles: ["customer", "graphql"]
    build:
      context: .
      dockerfile: ./services/customer/customer.dockerfile
    restart: on-failure
 
  graphql:
    profiles: ["graphql"]
    build:
      context: .
      dockerfile: ./services/graphql/graphql.dockerfile
    restart: on-failure
    ports:
      - 8081:8081
      - 4000:4000