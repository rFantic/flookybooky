enum BookingStatus {
    Cancelled
    Scheduled
    Departed
}

type Booking {
    id: String!
    going_flight: Flight!
    return_flight: Flight!
    customer: Customer!
    status: BookingStatus!
    ticket: [Ticket]!
}

input BookingInput{
    customerId: String!
    going_flight_id: String!
    return_flight_id: String
    ticket: [TicketInput]!
    status: BookingStatus!
}

input BookingInputForGuest{
    customer: CustomerInput!
    going_flight_id: String!
    return_flight_id: String
    ticket: [TicketInput]!
    status: BookingStatus!
}

input BookingCancelInput {
    id: String!
}

extend type Query {
    booking(input: Pagination): [Booking!]! @hasRoles(roles: [admin])
    cancelBooking(input: FlightCancelInput): Boolean! @hasRoles(roles: [admin])
}

extend type Mutation {
    createBookingForGuest(input: BookingInputForGuest!): Booking! 
    createBooking(input: BookingInput!): Booking! @hasRoles(roles: [user])
}