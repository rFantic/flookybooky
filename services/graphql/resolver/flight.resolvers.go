package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"flookybooky/services/graphql/internal"
	"flookybooky/services/graphql/model"

	"google.golang.org/protobuf/types/known/emptypb"
)

// CreateFlight is the resolver for the createFlight field.
func (r *mutationResolver) CreateFlight(ctx context.Context, input model.FlightInput) (*model.Flight, error) {
	flightRes, err := r.client.FlightClient.PostFlight(ctx, internal.ParseFlightInputGraphqlToPb(&input))
	return internal.ParseFlightPbToGraphql(flightRes), err
}

// Flight is the resolver for the flight field.
func (r *queryResolver) Flight(ctx context.Context) ([]*model.Flight, error) {
	flightsRes, err := r.client.FlightClient.GetFlights(ctx, &emptypb.Empty{})
	return internal.ParseFlightsPbToGraphql(flightsRes), err
}
